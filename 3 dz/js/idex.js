/* Заданы два массива
A = [ 12, 4, 3, 10, 1, 20 ]
B = [-3, -7, -100, -33]
необходимо их объединить
в один массив C добавив
массив B в конец(в начало) A. */
let A = [ 12, 4, 3, 10, 1, 20 ]  
let B = [-3, -7, -100, -33]  
let C=A.concat(B) //let C=B.concat(A)

/* Одномерным массивом задана доска 3 на 3
var area = [ null, null, null, null, null, null, null, null, null ]
Необходимо сформировать и вывести (document.write) игровое поле состоящее из квадратов для крестиков-ноликов в HTML.
При появлении в массиве 0-ля рисовать нолик , 1-цы крестик
Пример: [ 1, null, 0, null, 1, null, null, null, null ] на поле 2-а крестика, и 1-н нолик. */
var area = [ 1, null, 0, null, 1, null, null, null, null ]
let startTable="<table><tbody>";
let endTable="</tbody></table>";

for(var i=0;i<area.length;i++){
    if (area[i]==null){area[i]=""
    }else if (area[i]==1){area[i]="X"
    }else if (area[i]==0){area[i]="O" 
}}
let bodyTable = "<tr style='background-color:grey; height:30px'>"+"<td>"+ area[0]+"</td>"+"<td>"+ area[1]+"</td>"+"<td>"+ area[2]+"</td>"+"</tr>" + "<tr style='background-color:grey; height:30px'>"+"<td>"+ area[3]+"</td>"+"<td>"+ area[4]+"</td>"+"<td>"+ area[5]+"</td>"+"</tr>" + "<tr style='background-color:grey; height:30px'>"+"<td>"+ area[6]+"</td>"+"<td>"+ area[7]+"</td>"+"<td>"+ area[8]+"</td>"+"</tr>"
document.write(startTable+bodyTable+endTable)   


/* Задан массив - [12,4,3,10,1,20].
Удалить из него наименьшее и наибольшее значение */
let mas = [12,4,3,10,1,20]
console.log(mas)
for(var j=0;j<mas.length-1;j++){
    if (mas[j]>mas[j+1]){
        var temp=mas[j]
        mas[j]=mas[j+1]
        mas[j+1]=temp
    }
}
mas.pop();
console.log(mas)

for(var k=mas.length-1;k>=1;k--){
    if (mas[k]<mas[k-1]){
        var temp2=mas[k]
        mas[k]=mas[k-1]
        mas[k-1]=temp2
        console.log[mas]
    }
}
mas.shift();
console.log(mas)
/* В городе N проезд в трамвае осуществляется по бумажным отрывным билетам.
Каждую неделю трамвайное депо заказывает в местной типографии рулон билетов
с номерами от 000001 до 999999.
«Счастливым» считается билетик у которого сумма первых трёх цифр номера равна
сумме последних трёх цифр, как, например, в билетах с номерами 003102 или 567576.
Трамвайное депо решило подарить сувенир обладателю каждого счастливого билета и
теперь раздумывает, как много сувениров потребуется.
С помощью программы подсчитайте сколько счастливых билетов в одном рулоне. */
let count=0;
for (let c=1001;c<=999999;c++){// раньше чем 001001 счастливых билетов нет,нет смысла искать раньше
    let f=(c+"").split('') // делаем из числа строку и разбиваем на эл. массива
    if (f.length==4){ // если число 4х значное,добавляем перед ним два нуля
        f.unshift(0,0)
        for (let t=0;t<=5;t++){//каждый эл. массива приводим к числу
            f[t]=parseInt(f[t])
            }
        if((f[0]+f[1]+f[2])==(f[3]+f[4]+f[5])){++count}//проверяем сумму ,прибавляем к счетчику
    }else if (f.length==5){
        f.unshift(0)
        for (let t=0;t<=5;t++){
            f[t]=parseInt(f[t])
            }
        if((f[0]+f[1]+f[2])==(f[3]+f[4]+f[5])){++count}
    }else if (f.length==6){
        for (let t=0;t<=5;t++){
            f[t]=parseInt(f[t])
            }
        if((f[0]+f[1]+f[2])==(f[3]+f[4]+f[5])){++count}
    }
}
console.log(count)


/* Задача «Аннигилируй это».
Вы устроились работать в лабораторию по изучению антиматерии,
где проводят различные опыты. Ваш отдел изучает процессы,
которые происходят при объединении материи и антиматерии.
Вам необходимо провести серию опытов над некоторым
количеством молекул.
Соседний отдел разработал аппарат, который превращает
материю в антиматерию на небольшое время. Он пригодится
вам в проведении опытов, в которых используется следующий алгоритм:
1. Находим 2 самых тяжёлых молекулы.
2. Одну из них превращаем в антиматерию.
3. Объединяем их. При этом, если вес одинаковый, они аннигилируются.
Если же вес различается, то мы получаем новую молекулу, вес которой
равен разнице весов предыдущих двух. Сама получившаяся молекула
является материей.
Если осталась одна молекула — нужно выяснить её вес. Если же молекул
много — возвращаемся к пункту 1.
Вам необходимо узнать, молекула какого веса останется в конце
опыта, это знание нужно учёным другого отдела. Вам необходимо
разработать код, чтобы он работал за приемлемое время.
В качестве входных данных у вас будет массив с весами
молекул weights. В качестве выходных данных необходимо в
консоль вернуть число, которое обозначает вес последней
молекулы. Если молекул не останется, то необходимо вернуть 0.
Пример работы:
Вход: let weights = [2,7,4,1,8,1]
Выход: 1
Берём молекулы с весом 7 и 8, превращаем 7 в антимолекулу
и сталкиваем её с молекулой весом 8. Остаётся молекула
весом 1. Веса оставшихся молекул стали [2,4,1,1,1].
Берём молекулы с весом 2 и 4, превращаем 2 в антимолекулу
и сталкиваем её с молекулой весом 4. Остаётся молекула
весом 2. Веса оставшихся молекул стали [2,1,1,1]. Берем
молекулы с весом 2 и 1, превращаем 1 в антимолекулу и
сталкиваем её с молекулой весом 2. Остаётся молекула весом 1.
Веса оставшихся молекул стали [1,1,1]. Берем молекулы с
весом 1 и 1, превращаем одну из них в антимолекулу и
сталкиваем ее со второй. Они аннигилируются. Веса
оставшихся молекул [1]. Осталась одна молекула. Результат — 1. */

let weightsOriginal=[2, 7, 4, 1, 8, 1]
console.log(weightsOriginal)
let weights=weightsOriginal.slice()
while (weights.length>=1){
    if (weights.length == 2 && weights[0]==weights[1]) {
            console.log("0. Молекул не осталось")
            break;
        }
    if (weights.length == 1) {
        console.log("Вес последней молекулы", weights[0])
        break;
        }
    weights.sort(function(a, b) {
        return b - a;
    })
    console.log("q=",weights.length, weights)
    if (weights[0]==weights[1]){weights.splice(0,2)
    }else{
        weights[1]=weights[0]-weights[1]
        weights.splice(0,1)
    }
    console.log(weights)
}--weights.length
